name: Terraform plan and apply

on:
  pull_request:
    paths-ignore:
      - README.md
      - .editorconfig
  push:
    branches: [main]
    paths-ignore:
      - README.md
      - .editorconfig

jobs:
  terraform-plan-apply:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      checks: write
      contents: read
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Setup specific Terraform CLI version
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"

      - name: Run terraform plan/apply
        uses: op5dev/tf-via-pr@v13
        env:
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_tld: ${{ secrets.TF_VAR_tld }}
          TF_VAR_domain: ${{ secrets.TF_VAR_domain }}
          TF_VAR_subdomain: ${{ secrets.TF_VAR_subdomain }}
          TF_VAR_github_oidc_subject: ${{ secrets.TF_VAR_github_oidc_subject }}
          TF_VAR_web_image_tag: ${{ secrets.TF_VAR_web_image_tag }}
          TF_VAR_api_image_tag: ${{ secrets.TF_VAR_api_image_tag }}
        with:
          format: true
          validate: true
          command: ${{ github.event_name == 'push' && 'apply' || 'plan' }}
          arg-lock: ${{ github.event_name == 'push' }}
          arg-backend-config: dynamodb_table=${{ secrets.TF_BACKEND_DYNAMO_TABLE }},region=${{ secrets.TF_BACKEND_REGION }},bucket=${{ secrets.TF_BACKEND_BUCKET }},key=${{ secrets.TF_BACKEND_KEY }}
          plan-encrypt: ${{ secrets.PASSPHRASE }}
